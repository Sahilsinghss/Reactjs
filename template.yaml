apiVersion: v1
kind: Template
metadata:
  name: "${MC_SERVICE}"
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: "${MC_SERVICE}"
      namespace: "${NAMESPACE}"
      labels:
        app: "${MC_SERVICE}"
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 10%
          maxSurge: 10%
        resources:
          limits:
            cpu: "${LIMIT_CPU}"
            memory: "${LIMIT_MEMORY}"
          requests:
            cpu: "${REQUESTS_CPU}"
            memory: "${REQUESTS_MEMORY}"
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
      replicas: "${{REPLICA}}"
      test: false
      selector:
        app: "${MC_SERVICE}"
        deploymentconfig: "${MC_SERVICE}"
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: "${MC_SERVICE}"
            deploymentconfig: "${MC_SERVICE}"
        spec:
          containers:
            - name: "${MC_SERVICE}"
              image: "${REGISTRY_URL}"
              resources:
                limits:
                  cpu: "${LIMIT_CPU}"
                  memory: "${LIMIT_MEMORY}"
                requests:
                  cpu: "${REQUESTS_CPU}"
                  memory: "${REQUESTS_MEMORY}"
              volumeMounts:
              - mountPath: "/${CONFIGMAP}"
                name: "${CONFIGMAP}"
                readOnly: true
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: Always
              ports:
              - containerPort: "${{MC_PORT}}"
                protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: "${{MC_PORT}}"
                  scheme: HTTP
                initialDelaySeconds: 80
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: "${{MC_PORT}}"
                  scheme: HTTP
                initialDelaySeconds: 80
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              env:
              - name: "spring.config.location"
                value: "${{ENV_YAML}}"
          volumes:
            - name: "${CONFIGMAP}"
              configMap:
                defaultMode: 420
                name: "${CONFIGMAP}"
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: "${SECRET}"
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${MC_SERVICE}"
      name: "${MC_SERVICE}"
      namespace: "${NAMESPACE}"
    spec:
      ports:
      - port: "${{MC_PORT}}"
        protocol: TCP
        targetPort: "${{MC_PORT}}"
      selector:
        app: "${MC_SERVICE}"
        deploymentconfig: "${MC_SERVICE}"
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        template.openshift.io/expose-uri: "http://{.spec.host}"
      labels:
        app: "${MC_SERVICE}"
      name: "${MC_SERVICE}"
      namespace: "${NAMESPACE}"
    spec:
      port:
        targetPort: "${{MC_PORT}}"
      to:
        kind: Service
        name: "${MC_SERVICE}"
  - apiVersion: autoscaling/v2beta1
    kind: HorizontalPodAutoscaler
    metadata:
      name: "${MC_SERVICE}"
      namespace: "${NAMESPACE}"
      labels:
        app: "${MC_SERVICE}"
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: "${MC_SERVICE}"
        apiVersion: apps.openshift.io/v1
      metrics:
        - type: Resource
          resource:
            name: memory
            targetAverageUtilization: 50
        - type: Resource
          resource:
            name: cpu
            targetAverageUtilization: 50
parameters:
- name: MC_SERVICE
  displayName: OpenShift Container Name
  description: Application Name
  required: true
- name: REGISTRY_URL
  displayName: OpenShift Container Registry
  description: URL of the container in Registry (baseUrl/container-name:version)
  required: true
- name: NAMESPACE
  displayName: OpenShift Container Project Namespace
  description: OpenShift Container Project Namespace ( Project Name :xx)
  required: true
- name: LIMIT_CPU
  displayName: OpenShift Container Cpu Limits
  description: OpenShift Container Limit Cpu Edited
  required: true
- name: LIMIT_MEMORY
  displayName: OpenShift Container Memory Limits
  description: OpenShift Container Limit Memory Edited
- name: REQUESTS_CPU
  displayName: OpenShift Container Cpu Request
  description: OpenShift Container Request Cpu Edited
  required: true
- name: REQUESTS_MEMORY
  displayName: OpenShift Container Memory Request
  description: OpenShift Container Request Memory Edited
  required: true
- name: MC_PORT
  displayName: OpenShift Container Port
  description: OpenShift Container Port
  value: "port values"
  required: true
- name: REPLICA
  displayName: OpenShift Container Replicas
  description: OpenShift Container Replica Edited
  value: "1"
  required: true
- name: ENV_YAML
  displayName: OpenShift Container Memory Request
  description: OpenShift Container Request Memory Edited
  required: true
  value: "configmap environment value for SpringBoot"
- name: SECRET
  displayName: İmage pull secret
  description: İmage pull secret
  required: true
  value: "image pull secret values"
- name: CONFIGMAP
  displayName: Config map  parameters
  required: true